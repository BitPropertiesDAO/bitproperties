/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DAOGovernor, DAOGovernorInterface } from "../DAOGovernor";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "contract IVotes",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldProposalThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "ProposalThresholdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldQuorumNumerator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "QuorumNumeratorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingDelay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "VotingDelaySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "VotingPeriodSet",
    type: "event",
  },
  {
    inputs: [],
    name: "BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COUNTING_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVoteWithReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "setProposalThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "setVotingDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "setVotingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IVotes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "updateQuorumNumerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620031a7380380620031a7833981016040819052620000359162000434565b600581600161b2fa60008660405160200162000052919062000501565b60408051808303601f19018152828201825260018352603160f81b602093840152805183820190812060e08190527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66101008190524660a081815286517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818a0181905281890195909552606081810194909452608080820193909352308183018190528851808303909301835260c09182019098528151919098012090529390931b909352610120919091528051909162000132916000919062000371565b50620001409050836200017e565b6200014b82620001bf565b620001568162000266565b50505060601b6001600160601b031916610140526200017581620002a7565b505050620005b5565b60025460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600255565b60008111620002255760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084015b60405180910390fd5b60035460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600355565b60045460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600455565b60648111156200032c5760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a4016200021c565b600680549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b8280546200037f9062000562565b90600052602060002090601f016020900481019282620003a35760008555620003ee565b82601f10620003be57805160ff1916838001178555620003ee565b82800160010185558215620003ee579182015b82811115620003ee578251825591602001919060010190620003d1565b50620003fc92915062000400565b5090565b5b80821115620003fc576000815560010162000401565b80516001600160a01b03811681146200042f57600080fd5b919050565b600080604083850312156200044857600080fd5b82516001600160401b03808211156200046057600080fd5b818501915085601f8301126200047557600080fd5b8151818111156200048a576200048a6200059f565b604051601f8201601f19908116603f01168101908382118183101715620004b557620004b56200059f565b81604052828152886020848701011115620004cf57600080fd5b620004e28360208301602088016200052f565b8096505050505050620004f86020840162000417565b90509250929050565b60008251620005158184602087016200052f565b6723b7bb32b93737b960c11b920191825250600801919050565b60005b838110156200054c57818101518382015260200162000532565b838111156200055c576000848401525b50505050565b600181811c908216806200057757607f821691505b602082108114156200059957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160a05160c05160601c60e05161010051610120516101405160601c612b83620006246000396000818161061f01528181611799015261188c015260006119ff01526000611a4e01526000611a2901526000611982015260006119ac015260006119d60152612b836000f3fe6080604052600436106101c65760003560e01c80637b3c71d3116100f7578063c59057e411610095578063eb9019d411610064578063eb9019d4146105ad578063ece40cc1146105cd578063f8ce560a146105ed578063fc0c546a1461060d57600080fd5b8063c59057e4146104f3578063dd4e2ba514610513578063deaaa7cc14610559578063ea0217cf1461058d57600080fd5b8063a7713a70116100d1578063a7713a7014610489578063b58131b01461049e578063c01f9e37146104b3578063c28bc2fa146104d357600080fd5b80637b3c71d3146104355780637d5e81e21461045557806397c3d3341461047557600080fd5b80633bccf4fd11610164578063544ffc9c1161013e578063544ffc9c1461035a57806354fd4d50146103af57806356781388146103f557806370b0f6601461041557600080fd5b80633bccf4fd146102b65780633e4f49e6146102d6578063438596321461030357600080fd5b806306fdde03116101a057806306fdde031461024c5780632656227d1461026e5780632d63f693146102815780633932abb1146102a157600080fd5b806301ffc9a7146101d457806302a251a31461020957806306f3f9e61461022c57600080fd5b366101cf57005b005b600080fd5b3480156101e057600080fd5b506101f46101ef3660046124d4565b610666565b60405190151581526020015b60405180910390f35b34801561021557600080fd5b5061021e6106ff565b604051908152602001610200565b34801561023857600080fd5b506101cd610247366004612516565b61070f565b34801561025857600080fd5b5061026161076f565b60405161020091906127b8565b61021e61027c366004612383565b610801565b34801561028d57600080fd5b5061021e61029c366004612516565b610948565b3480156102ad57600080fd5b5061021e610981565b3480156102c257600080fd5b5061021e6102d13660046125d9565b61098c565b3480156102e257600080fd5b506102f66102f1366004612516565b610a20565b6040516102009190612790565b34801561030f57600080fd5b506101f461031e366004612548565b600082815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845260030190915290205460ff1692915050565b34801561036657600080fd5b50610394610375366004612516565b6000908152600560205260409020805460018201546002909201549092565b60408051938452602084019290925290820152606001610200565b3480156103bb57600080fd5b5060408051808201909152600181527f31000000000000000000000000000000000000000000000000000000000000006020820152610261565b34801561040157600080fd5b5061021e610410366004612574565b610b2c565b34801561042157600080fd5b506101cd610430366004612516565b610b55565b34801561044157600080fd5b5061021e610450366004612597565b610bad565b34801561046157600080fd5b5061021e610470366004612413565b610bff565b34801561048157600080fd5b50606461021e565b34801561049557600080fd5b5060065461021e565b3480156104aa57600080fd5b5061021e610fee565b3480156104bf57600080fd5b5061021e6104ce366004612516565b610ff9565b3480156104df57600080fd5b506101cd6104ee366004612329565b611029565b3480156104ff57600080fd5b5061021e61050e366004612383565b6110c1565b34801561051f57600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e90820152610261565b34801561056557600080fd5b5061021e7f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561059957600080fd5b506101cd6105a8366004612516565b6110fb565b3480156105b957600080fd5b5061021e6105c83660046122ff565b611153565b3480156105d957600080fd5b506101cd6105e8366004612516565b611166565b3480156105f957600080fd5b5061021e610608366004612516565b6111be565b34801561061957600080fd5b506106417f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610200565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fbf26d8970000000000000000000000000000000000000000000000000000000014806106f957507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600061070a60035490565b905090565b3330146107635760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e6365000000000000000060448201526064015b60405180910390fd5b61076c816111c9565b50565b60606000805461077e90612a31565b80601f01602080910402602001604051908101604052809291908181526020018280546107aa90612a31565b80156107f75780601f106107cc576101008083540402835291602001916107f7565b820191906000526020600020905b8154815290600101906020018083116107da57829003601f168201915b5050505050905090565b600080610810868686866110c1565b9050600061081d82610a20565b9050600481600781111561083357610833612abb565b14806108505750600581600781111561084e5761084e612abb565b145b6108c25760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f742073756363657373667560448201527f6c00000000000000000000000000000000000000000000000000000000000000606482015260840161075a565b60008281526001602081815260409283902060020180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a161093e82888888886112ab565b5095945050505050565b600081815260016020908152604080832081519283019091525467ffffffffffffffff16908190525b67ffffffffffffffff1692915050565b600061070a60025490565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff8516606082015260009081906109f8906109f090608001604051602081830303815290604052805190602001206113b7565b868686611420565b9050610a158782886040518060200160405280600081525061143e565b979650505050505050565b6000818152600160205260408120600281015460ff1615610a445750600792915050565b6002810154610100900460ff1615610a5f5750600292915050565b6000610a6a84610948565b905080610ab95760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c206964000000604482015260640161075a565b438110610aca575060009392505050565b6000610ad585610ff9565b9050438110610ae957506001949350505050565b610af285611571565b8015610b11575060008581526005602052604090208054600190910154115b15610b2157506004949350505050565b506003949350505050565b600080339050610b4d8482856040518060200160405280600081525061143e565b949350505050565b333014610ba45760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000604482015260640161075a565b61076c816115a8565b600080339050610bf586828787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061143e92505050565b9695505050505050565b6000610c09610fee565b610c18336105c86001436129ea565b1015610cb25760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72436f6d7061746962696c697479427261766f3a2070726f7060448201527f6f73657220766f7465732062656c6f772070726f706f73616c2074687265736860648201527f6f6c640000000000000000000000000000000000000000000000000000000000608482015260a40161075a565b6000610cc786868686805190602001206110c1565b90508451865114610d405760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e677460448201527f6800000000000000000000000000000000000000000000000000000000000000606482015260840161075a565b8351865114610db75760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e677460448201527f6800000000000000000000000000000000000000000000000000000000000000606482015260840161075a565b6000865111610e085760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c0000000000000000604482015260640161075a565b6000818152600160209081526040918290208251918201909252815467ffffffffffffffff169081905215610ea55760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c726561647920657869737460448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840161075a565b6000610eb7610eb2610981565b6115e9565b610ec0436115e9565b610eca919061295f565b90506000610ed9610eb26106ff565b610ee3908361295f565b83547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff841617845590506001830180547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff83161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d5167ffffffffffffffff811115610f8c57610f8c612ae7565b604051908082528060200260200182016040528015610fbf57816020015b6060815260200190600190039081610faa5790505b508c88888e604051610fd9999897969594939291906127cb565b60405180910390a15091979650505050505050565b600061070a60045490565b600081815260016020818152604080842081519283019091529091015467ffffffffffffffff1690819052610971565b3330146110785760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000604482015260640161075a565b6110ba8483838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525088925061166d915050565b5050505050565b6000848484846040516020016110da9493929190612745565b60408051601f19818403018152919052805160209091012095945050505050565b33301461114a5760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000604482015260640161075a565b61076c81611693565b600061115f838361174a565b9392505050565b3330146111b55760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000604482015260640161075a565b61076c81611815565b60006106f982611856565b60648111156112665760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e6160648201527f746f720000000000000000000000000000000000000000000000000000000000608482015260a40161075a565b600680549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b6000604051806060016040528060278152602001612afe60279139905060005b85518110156113ae576000808783815181106112e9576112e9612ad1565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1687848151811061131957611319612ad1565b602002602001015187858151811061133357611333612ad1565b60200260200101516040516113489190612729565b60006040518083038185875af1925050503d8060008114611385576040519150601f19603f3d011682016040523d82523d6000602084013e61138a565b606091505b509150915061139a82828661192f565b505050806113a790612a6c565b90506112cb565b50505050505050565b60006106f96113c4611968565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061143187878787611a9c565b9150915061093e81611b96565b600084815260016020819052604082209061145887610a20565b600781111561146957611469612abb565b146114dc5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201527f6976650000000000000000000000000000000000000000000000000000000000606482015260840161075a565b6040805160208101909152815467ffffffffffffffff1690819052600090611505908790611153565b905061151387878784611d87565b8573ffffffffffffffffffffffffffffffffffffffff167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48887848860405161155f94939291906128ca565b60405180910390a29695505050505050565b6000818152600560205260408120600281015460018201546115939190612947565b61159f61060885610948565b11159392505050565b60025460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600255565b600067ffffffffffffffff8211156116695760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f3420626974730000000000000000000000000000000000000000000000000000606482015260840161075a565b5090565b6060610b4d848484604051806060016040528060298152602001612b2560299139611f5c565b600081116117095760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f642060448201527f746f6f206c6f7700000000000000000000000000000000000000000000000000606482015260840161075a565b60035460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600355565b6040517f3a46b1a800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a89060440160206040518083038186803b1580156117dd57600080fd5b505afa1580156117f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115f919061252f565b60045460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600455565b600060646006546040517f8e539e8c000000000000000000000000000000000000000000000000000000008152600481018590527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690638e539e8c9060240160206040518083038186803b1580156118e357600080fd5b505afa1580156118f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191b919061252f565b61192591906129ad565b6106f9919061298b565b6060831561193e57508161115f565b82511561194e5782518084602001fd5b8160405162461bcd60e51b815260040161075a91906127b8565b60003073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480156119ce57507f000000000000000000000000000000000000000000000000000000000000000046145b156119f857507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611ad35750600090506003611b8d565b8460ff16601b14158015611aeb57508460ff16601c14155b15611afc5750600090506004611b8d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b50573d6000803e3d6000fd5b5050604051601f19015191505073ffffffffffffffffffffffffffffffffffffffff8116611b8657600060019250925050611b8d565b9150600090505b94509492505050565b6000816004811115611baa57611baa612abb565b1415611bb35750565b6001816004811115611bc757611bc7612abb565b1415611c155760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161075a565b6002816004811115611c2957611c29612abb565b1415611c775760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161075a565b6003816004811115611c8b57611c8b612abb565b1415611cff5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161075a565b6004816004811115611d1357611d13612abb565b141561076c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161075a565b600084815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452600381019092529091205460ff1615611e325760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c72656160448201527f6479206361737400000000000000000000000000000000000000000000000000606482015260840161075a565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600382016020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905560ff168360ff161415611eae5781816000016000828254611ea39190612947565b909155506110ba9050565b60ff831660011415611ece5781816001016000828254611ea39190612947565b60ff831660021415611eee5781816002016000828254611ea39190612947565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c696420766160448201527f6c756520666f7220656e756d20566f7465547970650000000000000000000000606482015260840161075a565b606082471015611fd45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161075a565b73ffffffffffffffffffffffffffffffffffffffff85163b6120385760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161075a565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516120619190612729565b60006040518083038185875af1925050503d806000811461209e576040519150601f19603f3d011682016040523d82523d6000602084013e6120a3565b606091505b5091509150610a1582828661192f565b600067ffffffffffffffff8311156120cd576120cd612ae7565b6120e06020601f19601f860116016128f2565b90508281528383830111156120f457600080fd5b828260208301376000602084830101529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461212f57600080fd5b919050565b600082601f83011261214557600080fd5b8135602061215a61215583612923565b6128f2565b80838252828201915082860187848660051b890101111561217a57600080fd5b60005b858110156121a05761218e8261210b565b8452928401929084019060010161217d565b5090979650505050505050565b600082601f8301126121be57600080fd5b813560206121ce61215583612923565b80838252828201915082860187848660051b89010111156121ee57600080fd5b60005b858110156121a057813567ffffffffffffffff81111561221057600080fd5b8801603f81018a1361222157600080fd5b6122328a87830135604084016120b3565b85525092840192908401906001016121f1565b600082601f83011261225657600080fd5b8135602061226661215583612923565b80838252828201915082860187848660051b890101111561228657600080fd5b60005b858110156121a057813584529284019290840190600101612289565b60008083601f8401126122b757600080fd5b50813567ffffffffffffffff8111156122cf57600080fd5b6020830191508360208285010111156122e757600080fd5b9250929050565b803560ff8116811461212f57600080fd5b6000806040838503121561231257600080fd5b61231b8361210b565b946020939093013593505050565b6000806000806060858703121561233f57600080fd5b6123488561210b565b935060208501359250604085013567ffffffffffffffff81111561236b57600080fd5b612377878288016122a5565b95989497509550505050565b6000806000806080858703121561239957600080fd5b843567ffffffffffffffff808211156123b157600080fd5b6123bd88838901612134565b955060208701359150808211156123d357600080fd5b6123df88838901612245565b945060408701359150808211156123f557600080fd5b50612402878288016121ad565b949793965093946060013593505050565b6000806000806080858703121561242957600080fd5b843567ffffffffffffffff8082111561244157600080fd5b61244d88838901612134565b9550602087013591508082111561246357600080fd5b61246f88838901612245565b9450604087013591508082111561248557600080fd5b612491888389016121ad565b935060608701359150808211156124a757600080fd5b508501601f810187136124b957600080fd5b6124c8878235602084016120b3565b91505092959194509250565b6000602082840312156124e657600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461115f57600080fd5b60006020828403121561252857600080fd5b5035919050565b60006020828403121561254157600080fd5b5051919050565b6000806040838503121561255b57600080fd5b8235915061256b6020840161210b565b90509250929050565b6000806040838503121561258757600080fd5b8235915061256b602084016122ee565b600080600080606085870312156125ad57600080fd5b843593506125bd602086016122ee565b9250604085013567ffffffffffffffff81111561236b57600080fd5b600080600080600060a086880312156125f157600080fd5b85359450612601602087016122ee565b935061260f604087016122ee565b94979396509394606081013594506080013592915050565b600081518084526020808501945080840160005b8381101561266d57815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161263b565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b858110156126c05782840389526126ae8483516126fd565b98850198935090840190600101612696565b5091979650505050505050565b600081518084526020808501945080840160005b8381101561266d578151875295820195908201906001016126e1565b60008151808452612715816020860160208601612a01565b601f01601f19169290920160200192915050565b6000825161273b818460208701612a01565b9190910192915050565b6080815260006127586080830187612627565b828103602084015261276a81876126cd565b9050828103604084015261277e8186612678565b91505082606083015295945050505050565b60208101600883106127b257634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600061115f60208301846126fd565b60006101208b8352602073ffffffffffffffffffffffffffffffffffffffff8c16818501528160408501526128028285018c612627565b91508382036060850152612816828b6126cd565b915083820360808501528189518084528284019150828160051b850101838c0160005b8381101561286757601f198784030185526128558383516126fd565b94860194925090850190600101612839565b505086810360a088015261287b818c612678565b94505050505061289760c084018767ffffffffffffffff169052565b67ffffffffffffffff851660e08401528281036101008401526128ba81856126fd565b9c9b505050505050505050505050565b84815260ff84166020820152826040820152608060608201526000610bf560808301846126fd565b604051601f8201601f1916810167ffffffffffffffff8111828210171561291b5761291b612ae7565b604052919050565b600067ffffffffffffffff82111561293d5761293d612ae7565b5060051b60200190565b6000821982111561295a5761295a612aa5565b500190565b600067ffffffffffffffff80831681851680830382111561298257612982612aa5565b01949350505050565b6000826129a857634e487b7160e01b600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156129e5576129e5612aa5565b500290565b6000828210156129fc576129fc612aa5565b500390565b60005b83811015612a1c578181015183820152602001612a04565b83811115612a2b576000848401525b50505050565b600181811c90821680612a4557607f821691505b60208210811415612a6657634e487b7160e01b600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612a9e57612a9e612aa5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a2646970667358221220602d264b1000d31079a65f4eec38fa311d3e2cc59faa3979d1a4e99a9fadd30164736f6c63430008070033";

export class DAOGovernor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _name: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DAOGovernor> {
    return super.deploy(_name, _token, overrides || {}) as Promise<DAOGovernor>;
  }
  getDeployTransaction(
    _name: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _token, overrides || {});
  }
  attach(address: string): DAOGovernor {
    return super.attach(address) as DAOGovernor;
  }
  connect(signer: Signer): DAOGovernor__factory {
    return super.connect(signer) as DAOGovernor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOGovernorInterface {
    return new utils.Interface(_abi) as DAOGovernorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOGovernor {
    return new Contract(address, _abi, signerOrProvider) as DAOGovernor;
  }
}
